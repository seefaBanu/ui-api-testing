{"uid":"f7301bfab0b36e43","name":"User creates a book without author","fullName":"src/test/resources/features/create_book_api.feature:17","historyId":"369f11adc875146de1a8916194b68a50","time":{"start":1735832592415,"stop":1735832592511,"duration":96},"status":"failed","statusMessage":"Unexpected status code! expected [400] but found [201]","statusTrace":"java.lang.AssertionError: Unexpected status code! expected [400] but found [201]\n\tat org.testng.Assert.fail(Assert.java:110)\n\tat org.testng.Assert.failNotEquals(Assert.java:1413)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:149)\n\tat org.testng.Assert.assertEquals(Assert.java:131)\n\tat org.testng.Assert.assertEquals(Assert.java:1240)\n\tat stepdefinitions.CreateBookApiStepDefinitions.response_status_code_for_create_api_should_be(CreateBookApiStepDefinitions.java:45)\n\tat ✽.the response status code for Create Book API should be 400(file:///home/runner/work/ui-api-testing/ui-api-testing/api-testing/src/test/resources/features/create_book_api.feature:21)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Unexpected status code! expected [400] but found [201]","statusTrace":"java.lang.AssertionError: Unexpected status code! expected [400] but found [201]\n\tat org.testng.Assert.fail(Assert.java:110)\n\tat org.testng.Assert.failNotEquals(Assert.java:1413)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:149)\n\tat org.testng.Assert.assertEquals(Assert.java:131)\n\tat org.testng.Assert.assertEquals(Assert.java:1240)\n\tat stepdefinitions.CreateBookApiStepDefinitions.response_status_code_for_create_api_should_be(CreateBookApiStepDefinitions.java:45)\n\tat ✽.the response status code for Create Book API should be 400(file:///home/runner/work/ui-api-testing/ui-api-testing/api-testing/src/test/resources/features/create_book_api.feature:21)\n","steps":[{"name":"Given  user is authenticated","time":{"start":1735832592415,"stop":1735832592417,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When  user sends a POST request to \"/api/books\" without mandatory field","time":{"start":1735832592417,"stop":1735832592508,"duration":91},"status":"passed","steps":[],"attachments":[{"uid":"9279b872f8533037","name":"Data table","source":"9279b872f8533037.csv","type":"text/tab-separated-values","size":20}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Then  the response status code for Create Book API should be 400","time":{"start":1735832592509,"stop":1735832592510,"duration":1},"status":"failed","statusMessage":"Unexpected status code! expected [400] but found [201]","statusTrace":"java.lang.AssertionError: Unexpected status code! expected [400] but found [201]\n\tat org.testng.Assert.fail(Assert.java:110)\n\tat org.testng.Assert.failNotEquals(Assert.java:1413)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:149)\n\tat org.testng.Assert.assertEquals(Assert.java:131)\n\tat org.testng.Assert.assertEquals(Assert.java:1240)\n\tat stepdefinitions.CreateBookApiStepDefinitions.response_status_code_for_create_api_should_be(CreateBookApiStepDefinitions.java:45)\n\tat ✽.the response status code for Create Book API should be 400(file:///home/runner/work/ui-api-testing/ui-api-testing/api-testing/src/test/resources/features/create_book_api.feature:21)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"And  the response body for Create Book API should be \"Mandatory parameters should not be null\"","time":{"start":1735832592510,"stop":1735832592511,"duration":1},"status":"skipped","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"stepdefinitions.CreateBookApiStepDefinitions.tearDown()","time":{"start":1735832592511,"stop":1735832592511,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"host","value":"fv-az841-430"},{"name":"thread","value":"2311@fv-az841-430.main(1)"},{"name":"feature","value":"Create Book API Testing"},{"name":"story","value":"User creates a book without author"},{"name":"suite","value":"Create Book API Testing"},{"name":"testClass","value":"User creates a book without author"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"file:///home/runner/work/ui-api-testing/ui-api-testing/api-testing/src/test/resources/features/create_book_api.feature"},{"name":"package","value":"src.test.resources.features.create_book_api_feature.Create Book API Testing"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":8},"items":[{"uid":"3b93e18f0bc95113","reportUrl":"https://seefaBanu.github.io/ui-api-testing/6//#testresult/3b93e18f0bc95113","status":"failed","statusDetails":"Unexpected status code! expected [400] but found [201]","time":{"start":1735832544003,"stop":1735832544099,"duration":96}},{"uid":"4bf5f4c42411efd4","reportUrl":"https://seefaBanu.github.io/ui-api-testing/5//#testresult/4bf5f4c42411efd4","status":"failed","statusDetails":"Unexpected status code! expected [400] but found [201]","time":{"start":1735817559346,"stop":1735817559443,"duration":97}},{"uid":"7510364b590b27be","reportUrl":"https://seefaBanu.github.io/ui-api-testing/4//#testresult/7510364b590b27be","status":"failed","statusDetails":"Unexpected status code! expected [400] but found [201]","time":{"start":1735758968076,"stop":1735758968170,"duration":94}},{"uid":"daa75e5cec137f34","reportUrl":"https://seefaBanu.github.io/ui-api-testing/3//#testresult/daa75e5cec137f34","status":"failed","statusDetails":"Unexpected status code! expected [400] but found [201]","time":{"start":1735758557455,"stop":1735758557551,"duration":96}},{"uid":"ae870f44abb609b4","reportUrl":"https://seefaBanu.github.io/ui-api-testing/2//#testresult/ae870f44abb609b4","status":"failed","statusDetails":"Unexpected status code! expected [400] but found [201]","time":{"start":1735758408170,"stop":1735758408265,"duration":95}},{"uid":"5dfabaa64354831e","reportUrl":"https://seefaBanu.github.io/ui-api-testing/1//#testresult/5dfabaa64354831e","status":"failed","statusDetails":"Unexpected status code! expected [400] but found [201]","time":{"start":1735757133055,"stop":1735757133152,"duration":97}},{"uid":"8c7fb179df0188a","reportUrl":"https://seefaBanu.github.io/ui-api-testing/17//#testresult/8c7fb179df0188a","status":"failed","statusDetails":"Unexpected status code! expected [400] but found [201]","time":{"start":1735749642743,"stop":1735749642849,"duration":106}}]},"tags":[]},"source":"f7301bfab0b36e43.json","parameterValues":[]}