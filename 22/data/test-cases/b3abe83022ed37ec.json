{"uid":"b3abe83022ed37ec","name":"User retrieves a specific book","fullName":"src/test/resources/features/get_book_by_id_api.feature:3","historyId":"4ce92089c8c440bcc44c9f98a93c736","time":{"start":1735891990825,"stop":1735891990913,"duration":88},"status":"failed","statusMessage":"Unexpected status code! expected [200] but found [403]","statusTrace":"java.lang.AssertionError: Unexpected status code! expected [200] but found [403]\n\tat org.testng.Assert.fail(Assert.java:110)\n\tat org.testng.Assert.failNotEquals(Assert.java:1413)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:149)\n\tat org.testng.Assert.assertEquals(Assert.java:131)\n\tat org.testng.Assert.assertEquals(Assert.java:1240)\n\tat stepdefinitions.GetBookByIdApiStepDefinitions.response_status_code_should_be(GetBookByIdApiStepDefinitions.java:42)\n\tat ✽.the response status code for GET book by ID API should be 200(file:///home/runner/work/ui-api-testing/ui-api-testing/api-testing/src/test/resources/features/get_book_by_id_api.feature:6)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Unexpected status code! expected [200] but found [403]","statusTrace":"java.lang.AssertionError: Unexpected status code! expected [200] but found [403]\n\tat org.testng.Assert.fail(Assert.java:110)\n\tat org.testng.Assert.failNotEquals(Assert.java:1413)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:149)\n\tat org.testng.Assert.assertEquals(Assert.java:131)\n\tat org.testng.Assert.assertEquals(Assert.java:1240)\n\tat stepdefinitions.GetBookByIdApiStepDefinitions.response_status_code_should_be(GetBookByIdApiStepDefinitions.java:42)\n\tat ✽.the response status code for GET book by ID API should be 200(file:///home/runner/work/ui-api-testing/ui-api-testing/api-testing/src/test/resources/features/get_book_by_id_api.feature:6)\n","steps":[{"name":"Given  user is authenticated","time":{"start":1735891990825,"stop":1735891990826,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false},{"name":"When  user sends a GET Book by ID request to \"/api/books/2\"","time":{"start":1735891990826,"stop":1735891990911,"duration":85},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false},{"name":"Then  the response status code for GET book by ID API should be 200","time":{"start":1735891990911,"stop":1735891990912,"duration":1},"status":"failed","statusMessage":"Unexpected status code! expected [200] but found [403]","statusTrace":"java.lang.AssertionError: Unexpected status code! expected [200] but found [403]\n\tat org.testng.Assert.fail(Assert.java:110)\n\tat org.testng.Assert.failNotEquals(Assert.java:1413)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:149)\n\tat org.testng.Assert.assertEquals(Assert.java:131)\n\tat org.testng.Assert.assertEquals(Assert.java:1240)\n\tat stepdefinitions.GetBookByIdApiStepDefinitions.response_status_code_should_be(GetBookByIdApiStepDefinitions.java:42)\n\tat ✽.the response status code for GET book by ID API should be 200(file:///home/runner/work/ui-api-testing/ui-api-testing/api-testing/src/test/resources/features/get_book_by_id_api.feature:6)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":true},{"name":"And  the response should contain book details","time":{"start":1735891990913,"stop":1735891990913,"duration":0},"status":"skipped","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"stepsCount":4,"attachmentsCount":0,"hasContent":true,"shouldDisplayMessage":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1536-815"},{"name":"thread","value":"2249@fv-az1536-815.main(1)"},{"name":"feature","value":"Get Book By ID API Testing"},{"name":"story","value":"User retrieves a specific book"},{"name":"suite","value":"Get Book By ID API Testing"},{"name":"testClass","value":"User retrieves a specific book"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"file:///home/runner/work/ui-api-testing/ui-api-testing/api-testing/src/test/resources/features/get_book_by_id_api.feature"},{"name":"package","value":"src.test.resources.features.get_book_by_id_api_feature.Get Book By ID API Testing"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"b3abe83022ed37ec.json","parameterValues":[]}